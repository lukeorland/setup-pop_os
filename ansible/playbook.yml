---
# populate a fresh Pop!_os instance
- hosts: 127.0.0.1
  connection: local
  vars:
    local_user: "{{ ansible_user_id }}"
    local_home: "{{ lookup('env','HOME') }}"
    region_loc: "en_US.UTF-8"
    new_hostname: popcomplingux0
    # gist_file: '{{ playbook_dir.split("/")[0:-1]|join("/") }}/18dafb104e93c9a2362ffe85c0dfd02e/dconf-settings.dconf'
    users:
      - luke
      - personal
    docker_edition: 'ce'
    docker_package: "docker-{{ docker_edition }}"
    docker_package_state: present
    docker_repo_url: https://download.docker.com/linux
    docker_apt_release_channel: stable
    docker_apt_arch: amd64
    docker_apt_repository: "deb [arch={{ docker_apt_arch }}] {{ docker_repo_url }}/ubuntu {{ ansible_distribution_release }} {{ docker_apt_release_channel }}"
    docker_apt_ignore_key_error: False
    docker_apt_gpg_key: https://download.docker.com/linux/ubuntu/gpg
    gnome_extension_ids:
      - 28    # gTile, <Super><Alt>Enter
      - 351   # Icon Hider
      - 131   # touchpad-indicator
      - 277   # impatience
      - 302   # windowoverlay-icons
      - 517   # caffeine
      - 779   # clipboard indicator
      - 800   # remove dropdown arrows
      - 906   # sound input and output device chooser
      - 1113  # nothing-to-say  :( causes Google Meet problems
      # 1160  # Dash2Panel
      - 1162  # emoji-selector, <Super><Shift>2
      # 1251  # blyr
      - 1317  # alt-tab-switcher-popup-delay-removal
      # 2660  # transparent panel


  roles:

    # {role: powerlinefonts, tags: 'font'}
    - {role: apt_packages, tags: 'apt'}
    - {role: geerlingguy.docker, become: yes, tags: 'docker'}
    - {role: gui_apps, tags: 'app'}
    - {role: markosamuli.pyenv}
    # {role: dropbox, tags: 'dropbox'}
    # {role: cryptomator, tags: 'crp'}
    - {role: jaredhocutt.gnome_extensions, tags: 'gext'}
    - {role: fira_code}
    - {role: alacritty_config, tags: 'alacritty'}
    - {role: oh_my_zsh, tags: 'zsh'}
    - {role: switch_pro_controller, tags: 'peripherals'}
    - {role: adesso_wireless_keyboard, tags: 'peripherals'}
    - {role: awscli, tags: 'aws'}
    - {role: emacs, tags: 'emacs'}
    - {role: workspaces, tags: 'work'}
    - {role: keybase, tags: 'gpg'}
    - {role: andrewrothstein.anaconda, tags: python}
    - {role: local_scripts, tags: 'zsh'}

  tasks:
  - name: Ensure group "docker" exists
    become: yes
    group:
      name: docker
      state: present

  - name: Set user settings
    become: yes
    user:
       name: "{{ item }}"
       shell: /usr/bin/zsh
       groups: adm,sudo,docker,personal,luke
       append: yes
       generate_ssh_key: yes
    loop: "{{ users }}"

  - name: reset ssh connection to allow user changes to affect 'current login user'
    become: yes
    meta: reset_connection

  - name: Set hostname of the machine
    become: yes
    copy:
      dest: /etc/hostname
      content: "{{ new_hostname }}"

  # TEST IF DIR EXSISTS, IF NOT > CREATE IT
  - name: Create dirs
    file:
      path: "{{ item }}"
      state: directory
    with_items:
      - "{{ local_home }}/storage"
      - "{{ local_home }}/Apps"
      - "{{ local_home }}/.local/bin"
      - "{{ local_home }}/go"

  - name: Make sudo docker passwordless
    become: yes
    lineinfile:
      path: /etc/sudoers.d/docker
      line: '%sudo  ALL=(ALL:ALL) NOPASSWD:/snap/bin/docker'
      create: yes
      owner: root
      mode: '0440'

  # - name: Clone dotfiles
  #   git:
  #     repo: "https://github.com/kevinjelnl/dotfiles.git"
  #     dest: "{{ local_home }}/dotfiles"
  #     update: no

  # - name: Set dotfiles
  #   shell: ./install
  #   args:
  #     chdir: "{{ local_home }}/dotfiles"

# # change the remote of the repo to SSH
# git remote set-url origin git@github.com:kevinjelnl/dotfiles.git


  - name: Ensure a locale exists
    become: yes
    locale_gen:
      name: "{{ region_loc }}"
      state: present

  # - name: Test if submodule with gist is present
  #   stat:
  #     path: "{{ gist_file }}"
  #   register: dconfisthere

  # - name: load DCONF settings
  #   shell: "dconf load '/' < '{{ gist_file }}'"
  #   when: dconfisthere.stat.exists

  # - name: Set multiple crons
  #   cron:
  #     name: "{{ item.name }}"
  #     special_time: "{{ item.time }}"
  #     job: "{{ item.job }}"
  #   loop:
  #     - { name: "dump dconf", time: "weekly", job: "/usr/bin/dconf dump / > {{ gist_file }}" }


  - name: xorg.conf.d directory
    become: yes
    file:
      name: /etc/X11/xorg.conf.d
      state: directory

  - name: left and right mouse buttons together middle click
    become: yes
    copy:
      dest: /etc/X11/xorg.conf.d/20-3rdbutton.conf
      content: >
        Section "InputClass"
          Identifier "middle button"
          MatchIsPointer "on"
          MatchDriver "libinput"
          Option "MiddleEmulation" "on"
        EndSection
